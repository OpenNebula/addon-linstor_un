#!/bin/bash

# -------------------------------------------------------------------------- #
# Copyright 2002-2019, OpenNebula Project, OpenNebula Systems                #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

###############################################################################
# This script is used to revert a snapshot of an image
###############################################################################

# -------- Set up the environment to source common tools & conf ------------

if [ -z "${ONE_LOCATION}" ]; then
    LIB_LOCATION=/usr/lib/one
else
    LIB_LOCATION=$ONE_LOCATION/lib
fi

. $LIB_LOCATION/sh/scripts_common.sh

DRIVER_PATH=$(dirname $0)
source ${DRIVER_PATH}/../libfs.sh
source ${DRIVER_PATH}/../../etc/datastore/linstor_un/linstor_un.conf
source ${DRIVER_PATH}/linstor_utils.sh

# -------- Get image and datastore arguments from OpenNebula core ------------

DRV_ACTION=$1
ID=$2

XPATH="${DRIVER_PATH}/../xpath.rb -b $DRV_ACTION"

unset i j XPATH_ELEMENTS

while IFS= read -r -d '' element; do
    XPATH_ELEMENTS[i++]="$element"
done < <($XPATH     /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/BRIDGE_LIST \
                    /DS_DRIVER_ACTION_DATA/IMAGE/SOURCE \
                    /DS_DRIVER_ACTION_DATA/IMAGE/TARGET_SNAPSHOT \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/LS_CONTROLLERS \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/LS_CERTFILE \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/LS_KEYFILE \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/LS_CAFILE)

BRIDGE_LIST="${XPATH_ELEMENTS[j++]}"
SRC="${XPATH_ELEMENTS[j++]}"
SNAP_ID="${XPATH_ELEMENTS[j++]}"
LS_CONTROLLERS="${XPATH_ELEMENTS[j++]}"
LS_CERTFILE="${XPATH_ELEMENTS[j++]}"
LS_KEYFILE="${XPATH_ELEMENTS[j++]}"
LS_CAFILE="${XPATH_ELEMENTS[j++]}"

SRC_DEV="$SRC"
SRC_RES="$(echo "$SRC_DEV" | $AWK -F/ '{print $(NF-1)}')"
SRC_HOST=`linstor_get_bridge_host $SRC_RES 0 $ID`

if [ -z "$SRC_HOST" ]; then
    exit -1
fi

linstor_load_keys

#-------------------------------------------------------------------------------
# Revert to last snapshot
#-------------------------------------------------------------------------------

LATEST_SNAPSHOT=$($LINSTOR -m --output-version v0 snapshot list -r "$SRC_RES" \
    | $JQ -r '.[].snapshot_dfns[-1].snapshot_name')

SNAPSHOT="snapshot-${SNAP_ID}"

if [ "$SNAPSHOT" = "$LATEST_SNAPSHOT" ]; then

    # Rollback snapshot 
    linstor_exec_and_log \
        "snapshot rollback $SRC_RES $SNAPSHOT"

    exit 0
fi

#-------------------------------------------------------------------------------
# Revert to previous snapshots
#-------------------------------------------------------------------------------

TMP_RES="${SRC_RES}-tmp"
TMP_DEV="/dev/drbd/by-res/${TMP_RES}/0"

# Deploy snapshot as volume
linstor_exec_and_log \
    "resource-definition create $TMP_RES $RD_CREATE_ARGS"
LINSTOR_CLEANUP_RD+=" $TMP_RES"
linstor_exec_and_log \
    "snapshot volume-definition restore --from-resource $SRC_RES --from-snapshot $SNAPSHOT --to-resource $TMP_RES"
linstor_exec_and_log \
    "snapshot resource restore --from-resource $SRC_RES --from-snapshot $SNAPSHOT --to-resource $TMP_RES"

# Attach diskless resources on SRC_HOST
linstor_attach_diskless "$SRC_HOST" "$TMP_RES" "$DISKLESS_POOL"

# Clone image from TMP_RES to SRC_RES
ssh_exec_and_log "$SRC_HOST" \
    "$DD if=$TMP_DEV of=$SRC_DEV bs=${DD_BLOCK_SIZE:-64k} conv=${DD_CONV:-sparse}" \
    "Error cloning $TMP_DEV to $SRC_DEV on $SRC_HOST"

exit 0
