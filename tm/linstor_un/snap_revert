#!/bin/bash

# -------------------------------------------------------------------------- #
# Copyright 2002-2019, OpenNebula Project, OpenNebula Systems                #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

# snap_revert host:parent_image snap_id vmid ds_id

SRC=$1
SNAP_ID=$2
VM_ID=$3
DS_ID=$4

#--------------------------------------------------------------------------------

if [ -z "${ONE_LOCATION}" ]; then
    TMCOMMON=/var/lib/one/remotes/tm/tm_common.sh
else
    TMCOMMON=$ONE_LOCATION/var/remotes/tm/tm_common.sh
fi

DRIVER_PATH=$(dirname $0)

source $TMCOMMON
source ${DRIVER_PATH}/../../datastore/libfs.sh
source ${DRIVER_PATH}/../../etc/datastore/linstor_un/linstor_un.conf
source ${DRIVER_PATH}/../../datastore/linstor_un/linstor_utils.sh

#-------------------------------------------------------------------------------
# Set dst path and dir
#-------------------------------------------------------------------------------

SRC_HOST=`arg_host $SRC`
SRC_PATH=`arg_path $SRC`

#-------------------------------------------------------------------------------
# Get Image information
#-------------------------------------------------------------------------------

DISK_ID=$(echo "$SRC_PATH" | $AWK -F. '{print $NF}')

XPATH="${DRIVER_PATH}/../../datastore/xpath.rb --stdin"

unset i j XPATH_ELEMENTS

while IFS= read -r -d '' element; do
    XPATH_ELEMENTS[i++]="$element"
done < <(onedatastore show -x $DS_ID | $XPATH \
                    /DATASTORE/TEMPLATE/LS_CONTROLLERS \
                    /DATASTORE/TEMPLATE/LS_CERTFILE \
                    /DATASTORE/TEMPLATE/LS_KEYFILE \
                    /DATASTORE/TEMPLATE/LS_CAFILE \
                    /DATASTORE/TEMPLATE/DISKLESS_POOL)

LS_CONTROLLERS="${XPATH_ELEMENTS[j++]}"
LS_CERTFILE="${XPATH_ELEMENTS[j++]}"
LS_KEYFILE="${XPATH_ELEMENTS[j++]}"
LS_CAFILE="${XPATH_ELEMENTS[j++]}"
DISKLESS_POOL="${XPATH_ELEMENTS[j++]:-DfltDisklessStorPool}"

linstor_load_keys

# Load cleanup trap
trap linstor_cleanup_trap EXIT

unset i j XPATH_ELEMENTS

while IFS= read -r -d '' element; do
    XPATH_ELEMENTS[i++]="$element"
done < <(onevm show -x $VM_ID| $XPATH \
                    /VM/TEMPLATE/DISK[DISK_ID=$DISK_ID]/SOURCE \
                    /VM/TEMPLATE/DISK[DISK_ID=$DISK_ID]/CLONE)

SRC_DEV="${XPATH_ELEMENTS[j++]}"
CLONE="${XPATH_ELEMENTS[j++]}"

SRC_RES="$(echo "$SRC_DEV" | $AWK -F/ '{print $(NF-1)}')"

if [ "$CLONE" != "NO" ]; then
    SRC_RES="one-vm-${VM_ID}-disk-${DISK_ID}"
    SRC_DEV="/dev/drbd/by-res/${SRC_RES}/0"
fi

#-------------------------------------------------------------------------------
# Revert to last snapshot
#-------------------------------------------------------------------------------

LATEST_SNAPSHOT=$($LINSTOR -m --output-version v0 snapshot list -r "$SRC_RES" \
    | $JQ -r '.[].snapshot_dfns[-1].snapshot_name')

SNAPSHOT="snapshot-${SNAP_ID}"

if [ "$SNAPSHOT" = "$LATEST_SNAPSHOT" ]; then

    # Rollback snapshot 
    linstor_exec_and_log \
        "snapshot rollback $SRC_RES $SNAPSHOT"

    exit 0
fi

#-------------------------------------------------------------------------------
# Revert to previous snapshots
#-------------------------------------------------------------------------------

TMP_RES="${SRC_RES}-tmp"
TMP_DEV="/dev/drbd/by-res/${TMP_RES}/0"

# Deploy snapshot as volume
linstor_exec_and_log \
    "resource-definition create $TMP_RES $RD_CREATE_ARGS"
LINSTOR_CLEANUP_RD+=" $TMP_RES"
linstor_exec_and_log \
    "snapshot volume-definition restore --from-resource $SRC_RES --from-snapshot $SNAPSHOT --to-resource $TMP_RES"
linstor_exec_and_log \
    "snapshot resource restore --from-resource $SRC_RES --from-snapshot $SNAPSHOT --to-resource $TMP_RES"

# Attach diskless resources on SRC_HOST
linstor_attach_diskless "$SRC_HOST" "$TMP_RES" "$DISKLESS_POOL"

# Clone image from TMP_RES to SRC_RES
ssh_exec_and_log "$SRC_HOST" \
    "$DD if=$TMP_DEV of=$SRC_DEV bs=${DD_BLOCK_SIZE:-64k} conv=${DD_CONV:-sparse}" \
    "Error cloning $TMP_DEV to $SRC_DEV on $SRC_HOST"

exit 0
