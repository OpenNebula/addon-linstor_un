#!/bin/bash

# -------------------------------------------------------------------------- #
# Copyright 2002-2019, OpenNebula Project, OpenNebula Systems                #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

# FAILMIGRATE SOURCE DST remote_system_dir vmid dsid template
#  - SOURCE is the host where the VM is running
#  - DST is the host where the VM is to be migrated
#  - remote_system_dir is the path for the VM home in the system datastore
#  - vmid is the id of the VM
#  - dsid is the target datastore
#  - template is the template of the VM in XML and base64 encoded

SRC_HOST=$1
DST_HOST=$2

DST_PATH=$3

VMID=$4
DSID=$5

TEMPLATE_64=$6

#--------------------------------------------------------------------------------

if [ -z "${ONE_LOCATION}" ]; then
    TMCOMMON=/var/lib/one/remotes/tm/tm_common.sh
else
    TMCOMMON=$ONE_LOCATION/var/remotes/tm/tm_common.sh
fi

DRIVER_PATH=$(dirname $0)

source $TMCOMMON
source ${DRIVER_PATH}/../../datastore/libfs.sh
source ${DRIVER_PATH}/../../etc/datastore/linstor_un/linstor_un.conf
source ${DRIVER_PATH}/../../datastore/linstor_un/linstor_utils.sh


#--------------------------------------------------------------------------------

if [ "$SRC_HOST" == "$DST_HOST" ]; then
    log "Not moving $SRC_HOST to $DST_HOST, they are the same host"
    exit 0
fi

#--------------------------------------------------------------------------------

if [ -n "$7" ]; then
    log "Called from tm/$7 but I've nothing to do"
    exit 0
fi

#--------------------------------------------------------------------------------

XPATH="${DRIVER_PATH}/../../datastore/xpath.rb --stdin"

unset i j XPATH_ELEMENTS

while IFS= read -r -d '' element; do
    XPATH_ELEMENTS[i++]="$element"
done < <(onedatastore show -x $DSID | $XPATH \
                    /DATASTORE/TEMPLATE/LS_CONTROLLERS \
                    /DATASTORE/TEMPLATE/LS_CERTFILE \
                    /DATASTORE/TEMPLATE/LS_KEYFILE \
                    /DATASTORE/TEMPLATE/LS_CAFILE)

LS_CONTROLLERS="${XPATH_ELEMENTS[j++]}"
LS_CERTFILE="${XPATH_ELEMENTS[j++]}"
LS_KEYFILE="${XPATH_ELEMENTS[j++]}"
LS_CAFILE="${XPATH_ELEMENTS[j++]}"

linstor_load_keys

unset i j XPATH_ELEMENTS

while IFS= read -r -d '' element; do
    XPATH_ELEMENTS[i++]="$element"
done < <(onevm show -x $VMID | $XPATH \
                    '%m%/VM/TEMPLATE/DISK[TM_MAD="linstor_un"]/DISK_ID' \
                    '%m%/VM/TEMPLATE/DISK[TM_MAD="linstor_un"]/IMAGE_ID' \
                    '%m%/VM/TEMPLATE/DISK[TM_MAD="linstor_un"]/CLONE')

DISK_IDS=( ${XPATH_ELEMENTS[j++]} )
IMAGE_IDS=( ${XPATH_ELEMENTS[j++]} )
CLONES=( ${XPATH_ELEMENTS[j++]} )

for (( i=0; i<${#DISK_IDS[@]}; i++ )); do
    IMAGE_ID=${IMAGE_IDS[$i]}
    DISK_ID=${DISK_IDS[$i]}
    CLONE=${CLONES[$i]}

    if [ "$CLONE" != "NO" ]; then
        DST_RES="one-vm-$VMID-disk-$DISK_ID"
    else
        DST_RES="one-image-$IMAGE_ID"
    fi

    # Unset allow-two-primaries
    linstor_exec_and_log \
        "resource-definition set-property $DST_RES DrbdOptions/Net/allow-two-primaries"

    # Detach diskless resources
    DST_RES_DISKLESS_HOSTS=$(linstor_get_diskless_hosts_for_res "$DST_RES")
    if item_in_list "$DST_HOST" "$DST_RES_DISKLESS_HOSTS"; then
        linstor_exec_and_log \
            "resource delete $DST_HOST $DST_RES --async"
    fi

done

exit 0
